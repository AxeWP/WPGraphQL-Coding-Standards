<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="WPGraphQL Strict Coding Standard" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/squizlabs/PHP_CodeSniffer/master/phpcs.xsd">
	<description>WPGraphQL Strict Coding Standard</description>

	<rule ref="WPGraphQL-Minimum" />

	<!-- The rules below are the changes from between the original sniff or parent ruleset, and what should be applied for this Standard. -->

	<!-- These are disabled in WPGraphQL core but should be reenabled. -->
	<rule ref="WordPress.WhiteSpace.ControlStructureSpacing">
		<properties>
			<property name="blank_line_check" value="true"/>
		</properties>
	</rule>
	<rule ref="Squiz.PHP.DisallowMultipleAssignments.FoundInControlStructure">
		<severity>5</severity>
	</rule>
	<rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
		<severity>5</severity>
	</rule>
	<rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
		<severity>5</severity>
	</rule>
	<rule ref="PEAR.Functions.FunctionCallSignature.MultipleArguments">
		<severity>5</severity>
	</rule>
	<rule ref="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid">
		<severity>5</severity>
	</rule>
	<rule ref="WordPress.DateTime.RestrictedFunctions.date_date">
		<severity>5</severity>
	</rule>
	<rule ref="WordPress.WP.I18n.MissingTranslatorsComment">
		<severity>5</severity>
	</rule>

	<!-- Additional commenting sniffs are in WPGraphQL-Docs -->
	<rule ref="Squiz.Commenting.FunctionComment">
		<!-- Enabled in WPGraphQL-Docs -->
		<exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop" />
		<exclude name="Squiz.Commenting.FunctionComment.EmptyThrows" />
		<properties>
				<property name="skipIfInheritdoc" value="true" />
		</properties>
	</rule>

	<!-- Slevomat rules - subject to review -->
	<rule ref="SlevomatCodingStandard.Arrays">
		<!-- Conflicts with WPCS -->
		<exclude name="SlevomatCodingStandard.Arrays.SingleLineArrayWhitespace"/>
		<!-- Semantic sorting is a valid pattern -->
		<exclude name="SlevomatCodingStandard.Arrays.AlphabeticallySortedByKeys"/>
	</rule>

	<rule ref="SlevomatCodingStandard.Classes.ModernClassNameReference">
		<properties>
			<!-- Doesn't use PHPCompatibility-->
			<property name="enableOnObjects" value="false"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Classes.RequireSelfReference" />
	<rule ref="SlevomatCodingStandard.Classes.DisallowConstructorPropertyPromotion" />
	<rule ref="SlevomatCodingStandard.Classes.DisallowLateStaticBindingForConstants" />
	<rule ref="SlevomatCodingStandard.Classes.DisallowMultiConstantDefinition" />
	<rule ref="SlevomatCodingStandard.Classes.DisallowMultiPropertyDefinition" />
	<rule ref="SlevomatCodingStandard.Classes.DisallowStringExpressionPropertyFetch" />
	<rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility" />
	<rule ref="SlevomatCodingStandard.Classes.UselessLateStaticBinding" />

	<rule ref="SlevomatCodingStandard.ControlStructures.UselessTernaryOperator" />

	<rule ref="SlevomatCodingStandard.Exceptions.DeadCatch" />
	<rule ref="SlevomatCodingStandard.Exceptions.DisallowNonCapturingCatch" />
	<rule ref="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly" />

	<rule ref="SlevomatCodingStandard.Functions.StaticClosure" />
	<rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure" />
	<rule ref="SlevomatCodingStandard.Functions.UselessParameterDefaultValue" />

	<rule ref="SlevomatCodingStandard.Namespaces.UnusedUses" />
	<rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash" />

	<rule ref="SlevomatCodingStandard.PHP.OptimizedFunctionsWithoutUnpacking" />
	<rule ref="SlevomatCodingStandard.PHP.TypeCast" />

	<rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable" />
	<rule ref="SlevomatCodingStandard.Variables.UnusedVariable" >
		<properties>
			<property name="ignoreUnusedValuesWhenOnlyKeysAreUsedInForeach" value="true" />
		</properties>
	</rule>

</ruleset>
